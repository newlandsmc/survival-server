#
#     = = = = = = = = = = = = = = =
#     → Default rtpSettings file  ←
#     = = = = = = = = = = = = = = =
#
# The name of this config section is 'default-settings', each section must have a unique name

# Should we load this config? If false, this config will not be usable anywhere.
# For finer control, enable or disable command-enabled and require-explicit-permission.
enabled: true

# Can a player use this config with `/rtp`?
# Set to false if you plan on having this config exclusively for rtp-on-first-join, rtp-on-death, or through the
#   `forcertp` command (the `forcertp` command is what you would use for portals).
command-enabled: true

# The player will only be able to use this config if they have the permission:
#   'jakesrtp.use.[name]' where the default config would be 'jakesrtp.use.default-settings'.
# This setting is most useful when there are overlapping configurations.
# Note: If used along side `rtp-on-death.require-permission` then the player will need both permissions.
require-explicit-permission: false

# The priority of the config. Higher priority are preferred over lower ones.
# Only useful if there are overlapping configurations (multiple configs that include the same worlds).
priority: 2

# The world that the user is teleported to.
landing-world: 'world'

# A list of worlds that this command works in, parsed with regex.
call-from-worlds:
  - 'world'

# Create/edit a distribution in the `distributions` folder, and put the file name here (without the .yml)
# There exists a dynamic distribution named `world-border` that automatically makes a distribution to perfectly
#   fill a world border managed by ChunkyBorder (or any future supported world border plugin), or the default minecraft
#   world border if no plugin is found.
distribution: 'nearby-rtp'

# Which method should we use to find a safe location? Since this plugin is meant to work 'out-of-the-box' without need
#   of configuring, the 'auto' option has been included.
# a - Auto:       Chooses middle-out for the nether and top-down for everything else.
# b - Top down:   Starts the search at the high bound and moves down until it finds the ground.
# c - Middle out: Starts the search between high and low and moves up and down to find land.
# The main difference between a and b? Top-down will never spawn you in a cave whereas Middle-out is intended for
#   underground teleports. Middle-out was written specifically to be used in the nether, though you can use it wherever.
# Note: If you choose c, you may want to edit `bounds.high` and make sure it it set to the max height for your world.
location-checking-profile: b

# Cooldown (time in seconds) between uses.
# Can be bypassed with permission node `jakesrtp.nocooldown` or 'jakesrtp.nocooldown.[rtpSettings]'
#                            (where the default config would be 'jakesrtp.nocooldown.default-settings')
# The cooldown is only used when the rtp is from a player run `/rtp` command, not from any type of force-rtp.
cooldown: 300

# Warmup (time in seconds) between calling the command, and actually getting teleported.
# Setting to `0` or negative will disable this feature.
# Can be bypassed in a similar way to the cooldown (`jakesrtp.nowarmup` or 'jakesrtp.nowarmup.[rtpSettings]')
# The warmup is only used when the rtp is from a player run `/rtp` command, not from any type of force-rtp.
warmup:
  time: 5
  cancel-on-move: true
  count-down: true

# Executes commands as console after a player is rtp'd.
# Placeholders - These can be used only in rtpSettings `then-execute` list items. Typing a placeholder wrong will
# result in the word 'null' instead of the placeholders value. Placeholders may be in upper or lower case.
#   %player%              The players minecraft name
#   %player_display_name% The players 'display-name' or nickname
#   %location%            The location the player landed, formatted like this: world (867, 53, -9)
#   %world%               The world the player landed in, formatted like this: world
#   %x% or %y% or %z%     Each of these will give its corresponding value, formatted like this: 86
#   %location_old%        The location of the player before they moved.
#   %world_old%           The world the player was in before they are moved.
#   %x_old% or %y_old% or %z_old% The x or y or z location of the player before they were moved.
then-execute:
  - 'tellraw %player% {"text":"You''ve been telelported 1000-2000 blocks from your old location.","color":"yellow"}'

# This only is used if you have an economy plugin.
# If you do have an economy plugin and you want to disable this feature, set cost to 0.
# Note: Cost can be a floating point value (ex: 6.67)
cost: 0.0

############## # Everything past this point in the config probably does not need to get changed
bounds: # The lowest and highest points a player can be RTP'd to.
  low: 32     # Default: 32
  high: 255   # Default: 255  | SET THIS TO 127 FOR NETHER WORLDS IF location-checking-profile IS NOT ON AUTO
check-radius: # How many blocks away from the initial spot to check.
  x-z: 2      # Default: 2    | Max spots to check per attempt is equal to:
  vert: 2     # Default: 2    | (2*vert+1)*(2*(x-z)+1)^2
max-attempts: # If the random location, and all (by default 125) close spots are found to be unsafe,
  value: 30   #   how many attempts can we make? Minimum: 1; Default: 10
preparations: # Preparing spots to teleport to. Note: These will be ignored if the center is players location.
  cache-locations: 30 # The number of safe rtp spots to hold on to. For best performance, keep this larger than 2.
prefer-sync-tp: # Players can be teleported either synchronously or asynchronously. Sync is faster, but can (not always)
  command: false #  produce lag-spikes that are felt by other players. Async is slower, but only for the person rtp-ing.
